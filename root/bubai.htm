<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>VillageMart Assistant</title>
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
    }

    .chat-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 320px;
      max-width: 90vw;  /* Responsive width */
      height: 450px;
      max-height: 80vh; /* Responsive height */
      background-color: #1a3c3c;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }

    .chat-header {
      background-color: #1a3c3c;
      color: white;
      padding: 12px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 16px;
      font-weight: bold;
    }

    .chat-header span.title::before {
      content: "ðŸ¤–";
      margin-right: 8px;
    }

    .close-btn {
      cursor: pointer;
      font-size: 20px;
      font-weight: bold;
    }

    .chat-body {
      flex: 1;
      background-color: #fff;
      padding: 12px;
      overflow-y: auto;
      font-size: 14px;
    }

    .chat-message {
      background-color: #f1f1f1;
      padding: 8px 12px;
      margin: 6px 0;
      border-radius: 8px;
      color: #333;
      word-wrap: break-word;
    }

    .chat-input {
      display: flex;
      padding: 10px;
      background-color: #e9ecef;
      border-top: 1px solid #ccc;
    }

    .chat-input input {
      flex-grow: 1;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 6px;
      outline: none;
      font-size: 14px;
    }

    .chat-input button {
      margin-left: 8px;
      padding: 10px 16px;
      background-color: #ff6200;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 14px;
      transition: background 0.3s;
    }

    .chat-input button:hover {
      background-color: #e05600;
    }
  </style>
</head>
<body>
  <div class="chat-container" id="chatContainer">
    <div class="chat-header">
      <span class="title">VillageMart Assistant</span>
      <span class="close-btn" onclick="document.getElementById('chatContainer').style.display='none'">Ã—</span>
    </div>
    <div class="chat-body" id="chatBody">
      <div class="chat-message">Hi! How can I help you today?</div>
    </div>
    <div class="chat-input">
      <input type="text" id="chatInput" placeholder="Type a message...">
      <button onclick="sendMessage()">Send</button>
    </div>
  </div>

  <script>
    const apiKey = "AIzaSyAe1Df3xvbACXF6WCVN0iIol8dpuvMpnPA";  // your Gemini API key
    const chatBody = document.getElementById("chatBody");
    const chatInput = document.getElementById("chatInput");

    function addMessage(message, isUser = false) {
      const messageDiv = document.createElement("div");
      messageDiv.className = "chat-message";
      messageDiv.style.backgroundColor = isUser ? "#d1e7dd" : "#f1f1f1";
      messageDiv.textContent = message;
      chatBody.appendChild(messageDiv);
      chatBody.scrollTop = chatBody.scrollHeight;
    }

    async function sendMessage() {
      const userMessage = chatInput.value.trim();
      if (!userMessage) return;

      addMessage(`You: ${userMessage}`, true);
      chatInput.value = "";

      try {
        const response = await fetch(
          `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${apiKey}`,
          {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
              contents: [{ role: "user", parts: [{ text: userMessage }] }]
            }),
          }
        );

        const data = await response.json();
        if (data.candidates && data.candidates.length > 0) {
          const reply = data.candidates[0].content.parts[0].text;
          addMessage(`VillageMart Assistant: ${reply}`);
        } else {
          addMessage("VillageMart Assistant: Sorry, I couldn't get a response.");
        }
      } catch (error) {
        console.error("Error:", error);
        addMessage("VillageMart Assistant: Sorry, I encountered an error.");
      }
    }

    // Send message with Enter key
    chatInput.addEventListener("keypress", (e) => {
      if (e.key === "Enter") sendMessage();
    });
  </script>
</body>
</html>
